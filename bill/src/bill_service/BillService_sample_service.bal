import ballerina/grpc;
import ballerina/log;

map<float> itemPriceList = {
    "item1" : 1.5,
    "item2" : 2.0,
    "item3" : 5.9
};

listener grpc:Listener ep = new (9090);

service BillService on ep {

    resource function UpdateBill(grpc:Caller caller, Item item) {

        Bill interimBill = {};    
        interimBill.itemNumber = item.itemNumber;
        interimBill.totalQuantity = item.quantity;
        interimBill.totalPrice = item.quantity * itemPriceList.get("item.itemNumber");

        grpc:Error? result = caller->send(interimBill);
        if (result is grpc:Error) {
            log:printError("Error from Connector: " + result.message());
        }
    }
}

public type Item record {|
    string itemNumber = "";
    int quantity = 0;
    
|};

public type Bill record {|
    string itemNumber = "";
    int totalQuantity = 0;
    float totalPrice = 0.0;
    
|};

const string
function getDescriptorMap() returns map<string> {
    return {
        "bill.proto":"0A0A62696C6C2E70726F746F120B72657461696C5F73686F701A1E676F6F676C652F70726F746F6275662F77726170706572732E70726F746F22420A044974656D121E0A0A6974656D4E756D626572180120012809520A6974656D4E756D626572121A0A087175616E7469747918022001280552087175616E74697479226C0A0442696C6C121E0A0A6974656D4E756D626572180120012809520A6974656D4E756D62657212240A0D746F74616C5175616E74697479180220012805520D746F74616C5175616E74697479121E0A0A746F74616C5072696365180320012802520A746F74616C507269636532410A0B42696C6C5365727669636512320A0A55706461746542696C6C12112E72657461696C5F73686F702E4974656D1A112E72657461696C5F73686F702E42696C6C620670726F746F33",
        "google/protobuf/wrappers.proto
        
    };
}

